{"version":3,"sources":["MyComponents/Header/Header.js","MyComponents/ToDos/TodoItem.js","MyComponents/Todos.js","MyComponents/Footer/Footer.js","MyComponents/ToDos/AddTodo.js","MyComponents/AboutUs/About.js","MyComponents/FirebaseApi/HttpRequest.js","MyComponents/Contactus.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","defaultProps","TodoItem","todo","onDelete","style","desc","onClick","Todos","minHeight","margin","textDecoration","color","fontFamily","todos","length","map","sno","Footer","AddTodo","useState","setTitle","setDesc","onSubmit","e","preventDefault","addTodo","alert","htmlFor","value","onChange","target","aria-describedby","rows","About","style1","padding","FIREBASE_DOMAIN","MyTodoList","a","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","Contactus","Name","Email","ContactNo","Description","query","setQuery","handleChange","name","prevState","textAlign","fontSize","placeholder","onInvalid","setCustomValidity","onInput","pattern","App","initTodo","localStorage","getItem","parse","setTodos","useEffect","setItem","filter","myTodo","console","log","HttpRequest","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef2c9723.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\"\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg  bg-dark \">\r\n        <div className=\"container-fluid text-warning \">\r\n          <Link className=\"navbar-brand link\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler bg-dark\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon bg-dark \"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link link\" to=\"/about\">About</Link>\r\n              </li>  \r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link link\" to=\"/contact-us\">Contact us</Link>\r\n              </li> \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n  title: \"Your Title Here\",\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport \"./TodoItem.css\"\r\n\r\nexport const TodoItem = ({todo, onDelete, style}) => {\r\n\r\n    // console.log(style)\r\n    return (\r\n        <>\r\n        <div className=\"\">\r\n            <div className={style}>\r\n           <h4>Title : {todo.title}</h4>\r\n           <p>Description : {todo.desc}</p>\r\n           {/* <p>Date : {todo.date}</p> */}\r\n           </div>\r\n           <button className=\"btn btn-sm btn-danger\" onClick={()=>{onDelete(todo)}}>Delete</button>          \r\n        </div>\r\n        <hr/> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {TodoItem} from \"./ToDos/TodoItem\";\r\n\r\nexport const Todos = (props) => {\r\n    let myStyle = {\r\n        minHeight: \"70vh\",\r\n        margin: \"40px auto\"\r\n    }\r\n    // console.log(props.style)\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h3 className=\"my-3 \" style={{ textDecoration:\"underline\", color: \"green\", fontFamily:\"italic\"}}> <b>Todos List</b> </h3>\r\n            {props.todos.length===0? \"No Todos to display\":  \r\n            props.todos.map((todo)=>{\r\n                return (<TodoItem todo={todo} key={todo.sno} onDelete={props.onDelete} style={props.style}/>   \r\n                )\r\n            })\r\n              } \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Footer.css'\r\nexport const Footer = () => { \r\n    return (\r\n        <footer className=\"bg-dark text-light py-2.8 Footer\" >\r\n            <p className=\"text-center\">\r\n            Copyright &copy; MyTodosList.com\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport \"./AddTodo.css\";\r\nexport const AddTodo = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (!title || !desc) {\r\n            alert(\"Title or Description cannot be blank\");\r\n        }\r\n        else {\r\n            props.addTodo(title, desc);\r\n            alert(\"ToDo Submitted Successfully\")\r\n            setTitle(\"\");\r\n            setDesc(\"\");\r\n           \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container my-3\">\r\n            <h3 style={{ textDecoration:\"underline\", color: \"green\", fontFamily:\"italic\"}}> <b> Add a Todo</b></h3>\r\n            <form onSubmit={submit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Todo Title</label>\r\n                    <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} className=\"form-control field\" id=\"title\" aria-describedby=\"emailHelp\" />\r\n\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"desc\" className=\"form-label\">Todo Description</label>\r\n                    <textarea rows=\"3\" value={desc} onChange={(e) => setDesc(e.target.value)} className=\"form-control textarea field\" id=\"desc\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-sm btn-success\">Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const About = () => {\r\n    let style = {\r\n        margin: \"20px\",\r\n        padding: \"10px\",\r\n        color: \"blue\",\r\n        // background: \"pink\",\r\n        // margin: \"auto\"   \r\n    }\r\n    let style1 = {\r\n        color: \"black\"\r\n    }\r\n\r\n    return (\r\n        <div className=' card' style={style}>\r\n            <h3 style={style1} >What is a To-Do List?</h3><hr />It’s a list of tasks you need to complete or things that you want to do.\r\n\r\n            Most typically, they’re organised in order of priority. Traditionally, they’re written on a piece of paper or post it notes and act as a memory aid. As technology has evolved we have been able to create a todo lists with excel spreadsheets, word documents, email lists, todo list apps, Microsoft to do and google to do list to name a few. You can use a to do list in your home and personal life, or in the workplace.\r\n\r\n            Having a list of everything you need to do written down in one place means you shouldn’t forget anything important. By prioritising the tasks in the list you plan the order in which you’re going to do them and can quickly see what needs your immediate attention and what tasks you can leave until a little later.\r\n            <hr />\r\n            <h3 style={style1}>The Benefits of Using a To-Do List :- </h3>< hr />\r\n            One of the most important reasons you should use a to do list is that it will help you stay organised. When you write all your tasks in a list, they seem more manageable. When you’ve got a clear outline of the tasks you’ve got to do and those you’ve completed, it helps you stay focused. While freeing up space in your mind for other more creative tasks.\r\n\r\n            When you complete a task, you can cross it off your list. This gives you a sense of progress and achievement, something you’ll lack if you’re always rushing from one task to the next. If you feel a sense of achievement, it spurs you on and motivates you to keep moving forward.\r\n            <hr />\r\n            <h3 style={style1}>Why To-Do list is important?  </h3>< hr />\r\n            One of the most significant benefits of why to do list is important that it will help you stay organized. It will also help those tasks appear more manageable.\r\n\r\nYou’ll be able to stay more focused because you’ve got an outline of what you’ve got to do and things you’ve already completed. Having tasks written in a list frees up space in your mind and allows you to be more creative.\r\n            <hr />\r\n            <h3 style={style1}>Make a To-Do List Tricks and Methods :- </h3>< hr />\r\n            How do you make a to-do list that works? One reason why to-do lists don't work is that most people don't know how to craft them correctly. You could end up with a list that's too long, too short, too convoluted or too confusing, among other things. Then, the to-do list becomes a hindrance to your efficiency rather than a useful tool. So, how do you make a to-do list worth following? What prioritisation techniques and methods can you help you make your to-do list more productive.\r\n            <br /><br />\r\n        </div>\r\n    )\r\n}\r\n","const FIREBASE_DOMAIN = 'https://mytodolist-e06a2-default-rtdb.firebaseio.com/'\r\n// const FIREBASE_DOMAIN = ''\r\n\r\nexport async function HttpRequest( MyTodoList ) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/MyTodoList .json`, {\r\n    method: \"POST\",\r\n\r\n    body: JSON.stringify(MyTodoList),\r\n\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not create toDoList.\");\r\n  }\r\n\r\n  return null;\r\n}","import \"./Contactus.css\"\r\nimport React, { useState } from 'react';\r\n// import { HttpRequest } from \"./FirebaseApi/HttpRequest\";\r\n\r\n\r\n\r\nconst Contactus = () => {\r\n  const [query, setQuery] = useState({ Name: \"\", Email: \"\", ContactNo: \"\", Description: \"\" });\r\n\r\n\r\n\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setQuery(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n\r\n    }));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log()\r\n    if (query.Name.length === 0 || query.Email.length === 0 || query.ContactNo.length === 0 || query.Description.length === 0) {\r\n      alert(\"Each fields are mandatory to fill.\")\r\n    }\r\n    else {\r\n      const FIREBASE_DOMAIN = 'https://mytodolist-e06a2-default-rtdb.firebaseio.com/'\r\n      fetch(`${FIREBASE_DOMAIN}/Contact-Us .json`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(query),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      alert(\"Details submitted successfully. We will contact you soon.\")\r\n      setQuery({ Name: \"\", Email: \"\", ContactNo: \"\", Description: \"\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"box\" >\r\n      <h3 style={{ textAlign: \"center\", textDecoration: \"underline\", color: \"black\", fontFamily: \"italic\" }}><b> Feel free to ask us anything!</b></h3>\r\n      <p style={{ textAlign: \"center\", fontSize: \"20px\", color: \"grey\", fontFamily: \"italic\" }}>Have doubt or suggestion to make? Feel free to ask anything. If you have any suggestions, please let me know. Your suggestions are highly appreciated. I appreciate your time and try hard to reply to every single message posted here! Keep dropping your priceless opinions.</p>\r\n      <form className=\"contact\" onSubmit={submitHandler}>\r\n        <div className=\"form-group input \">\r\n          <input type=\"Name\" className=\"form-control field\" value={query.Name} onChange={handleChange} name=\"Name\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Your Name\" />\r\n        </div>\r\n        <div className=\"form-group input\">\r\n          <input type=\"maill\" className=\"form-control field\" onInvalid={e => e.target.setCustomValidity('Please Enter Valid E-mail Address ( Example- test@domain.com)')}\r\n            onInput={e => e.target.setCustomValidity('')} value={query.Email} onChange={handleChange} name=\"Email\"  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" placeholder=\"Enter your Email\" />\r\n        </div>\r\n\r\n        <div className=\"form-group input\">\r\n          <input type=\"Contact-no\" className=\"form-control field\" value={query.ContactNo} onChange={handleChange} name=\"ContactNo\" onInvalid={e => e.target.setCustomValidity('Please Enter 10 Digit Mobile No.')}\r\n            onInput={e => e.target.setCustomValidity('')}  pattern=\"[6-9]{1}[0-9]{9}\" id=\"exampleInputPassword1\" placeholder=\"Enter your contact no.\" />\r\n        </div>\r\n        <div className=\"form-group input\">\r\n          <textarea className=\"form-control field\" value={query.Description} onChange={handleChange} name=\"Description\" id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"Mention your query here\"></textarea>\r\n        </div>\r\n\r\n        <div className=\"button\">\r\n          <button type=\"submit\" className=\"btn btn-success \">Submit</button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\nexport default Contactus;","import './App.css';\nimport Header from \"./MyComponents/Header/Header\";\nimport { Todos } from \"./MyComponents/Todos\";\nimport { Footer } from \"./MyComponents/Footer/Footer\";\nimport { AddTodo } from \"./MyComponents/ToDos/AddTodo\";\nimport { About } from \"./MyComponents/AboutUs/About\";\nimport React, { useState, useEffect } from 'react';\nimport { HttpRequest } from './MyComponents/FirebaseApi/HttpRequest';\nimport Contactus from \"./MyComponents/Contactus\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  let initTodo;\n  if (localStorage.getItem(\"todos\") === null) {\n    initTodo = [];\n  }\n  else {\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n\n  const [todos, setTodos] = useState(initTodo);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos])\n\n\n  const onDelete = (todo) => {\n    setTodos(todos.filter((e) => {\n      return e !== todo;\n    }));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  const addTodo = (title, desc) => {\n    let sno;\n    if (todos.length === 0) {\n      sno = 0;\n    }\n    else {\n      sno = todos[todos.length - 1].sno + 1;\n    }\n    const myTodo = {\n      sno: sno,\n      title: title,\n      desc: desc,\n      \n    }\n    setTodos([...todos, myTodo]);\n    console.log( {\n      sno: sno,\n      title: title,\n      desc: desc,\n    })\n    HttpRequest(\n      {\n        sno: sno,\n        title: title,\n        desc: desc,\n      }\n    );\n    }\n\n\n  return ( \n    <> \n    <Router>\n      <Header title=\"My Todos List\"  /> \n\n      <Switch>\n          <Route exact path=\"/\" render={()=>{\n            return(\n            <>\n            <AddTodo addTodo={addTodo} />\n            <Todos todos={todos} onDelete={onDelete}  /> \n            </>)\n          }}> \n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> \n          <Route exact path=\"/contact-us\">\n            <Contactus />\n          </Route> \n        </Switch> \n\n      <Footer />\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}